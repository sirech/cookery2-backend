version: 2
jobs:
  build:

    working_directory: ~/app

    docker:
      - image: circleci/openjdk:8-jdk

    steps:

      - checkout
      - run: ./go linter-kt
      - run: ./go test-unit
      - run: ./go test-pact
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - run: ./go build

      - persist_to_workspace:
          root: build/libs
          paths:
            - cookery2.jar

  docker:

    docker:
      - image: sirech/dind-ruby:2.6.3
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle

    steps:

      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: build/libs

      - restore_cache:
          key: bundle-2-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --without ops development
      - save_cache:
          key: bundle-2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run: ./go containerize
      - run: ./go test-container

      - run:
          name: Publish docker image
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER $DOCKER_REGISTRY --password-stdin
            docker build . --tag $DOCKER_REGISTRY/cookery2-backend
            docker push $DOCKER_REGISTRY/cookery2-backend

workflows:
  version: 2
  pipeline:
    jobs:
      - build
      - docker:
          filters:
            branches:
              only: master
          requires:
            - build
